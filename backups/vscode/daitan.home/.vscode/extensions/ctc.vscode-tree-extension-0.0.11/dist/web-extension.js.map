{"version":3,"file":"web-extension.js","mappings":"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","sources":["webpack://vscode-tree-extension/./node_modules/path-browserify/index.js","webpack://vscode-tree-extension/./node_modules/process/browser.js","webpack://vscode-tree-extension/./src/providers/completionItemsProvider.ts","webpack://vscode-tree-extension/./src/providers/foldingRangeProvider.ts","webpack://vscode-tree-extension/./src/providers/formattingEditProvider.ts","webpack://vscode-tree-extension/./src/providers/textDocumentChangeProvider.ts","webpack://vscode-tree-extension/./src/tree.ts","webpack://vscode-tree-extension/external commonjs \"vscode\"","webpack://vscode-tree-extension/webpack/bootstrap","webpack://vscode-tree-extension/./src/extension.ts"],"sourcesContent":["// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\nimport * as vscode from \"vscode\";\n\n// This is how we can provide intellisense/autocomplete\n\nexport function provideCompletionItems(\n  document: vscode.TextDocument,\n  position: vscode.Position,\n  token: vscode.CancellationToken\n): Promise<vscode.CompletionItem[]> {\n  const items: Array<vscode.CompletionItem> = [];\n\n  // items.push(new vscode.CompletionItem(\"├──\", vscode.CompletionItemKind.Text));\n  return Promise.resolve(items);\n}\n","import * as vscode from \"vscode\";\nimport { INDEX_NAME, treeStringToJson } from \"../tree\";\nimport { TreeType } from \"../types/treeType\";\n\nexport function provideFoldingRanges(document: vscode.TextDocument): vscode.ProviderResult<vscode.FoldingRange[]> {\n  const getLastNode = (branch: TreeType) => {\n    const indexes: Array<number> = [];\n    // Get the last line number that is a child of the given branch\n    const getIndexes = (branch: TreeType) => {\n      if (Object.values(branch).length === 1) {\n        indexes.push(branch[INDEX_NAME]);\n      } else {\n        Object.values(branch).forEach((child) => {\n          getIndexes(child);\n        });\n      }\n    };\n    getIndexes(branch);\n    return Math.max(...indexes);\n  };\n\n  const ranges = new Array<vscode.FoldingRange>();\n  const getRanges = (branch: TreeType) => {\n    const children = Object.values(branch);\n    // Each branch stores its line index in addition to children, so if there is only 1 child it is the branch's index\n    if (children.length == 1) return;\n    const startIndex = branch[INDEX_NAME];\n    const endIndex = getLastNode(branch);\n    ranges.push(new vscode.FoldingRange(startIndex, endIndex, vscode.FoldingRangeKind.Region));\n    children.forEach((child) => {\n      // The child is either the branch's line index or an Object with more children to parse\n      if (typeof child === \"number\") return;\n      getRanges(child);\n    });\n  };\n\n  const tree: TreeType = treeStringToJson(document.getText());\n  if (!tree) return ranges;\n  Object.values(tree).forEach((branch: TreeType) => {\n    getRanges(branch);\n  });\n\n  return ranges;\n}\n","\nimport * as vscode from \"vscode\";\n\n// This is for formatting the code\nexport function provideDocumentFormattingEdits(document: vscode.TextDocument): vscode.TextEdit[] {\n  const textEdits: vscode.TextEdit[] = [];\n\n  return textEdits;\n}\n","import * as vscode from \"vscode\";\n\nconst TREE_CHARS = [\"├──\", \"└──\"];\n\n// TODO: This is getting rekt by the setting: workbench.editor.languageDetection being true\nexport function textDocumentChangeProvider(event: vscode.TextDocumentChangeEvent) {\n  const { isUntitled, version } = event.document;\n  const isFirstPaste = isUntitled && version <= 2;\n\n  // console.log(\"isFirstPaste\", isFirstPaste, \"isUitite;d\", isUntitled, \"version\", version);\n  if (!isFirstPaste) {\n    return;\n  }\n\n  const textDocument = event.document;\n  const text = textDocument.getText();\n\n  // test if the doc has any tree chars\n  if (TREE_CHARS.some((v: string) => text.includes(v))) {\n    console.log(\"Containers tree char, setting lang\");\n    vscode.languages.setTextDocumentLanguage(textDocument, \"tree\");\n  }\n}\n","import { TreeType } from \"./types/treeType\";\n\nexport const uuid = () => {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\n\nexport const INDEX_NAME = uuid();\n\n// Use a unique index so that it won't conflict with any file names\nconst EOL_MATCH = /\\r?\\n/;\n\n/**\n * Scans a line of text for tab chars\n * @param line\n * @returns Number of tabs in the line\n */\nconst getNumberOfTabs = (line: string): number => {\n  return (line.match(/\\t/g) || []).length;\n};\n\n/**\n * Get's the tab char based on the first child tree item\n * @param text\n * @returns A character that represents the tab char\n */\nconst getTabChar = (text: string): string | null => {\n  // Search for the first child in the tree and extract the tab character from there\n  const treeLines = text.split(EOL_MATCH);\n  const childRegex = /│?(.+)(├──|└──)/;\n  const firstChild = treeLines.find((line) => line.match(childRegex));\n  const match = firstChild?.match(childRegex);\n  return match?.[1] || null;\n};\n\n/**\n * Converts a tree string output to a json object\n * @param {String} text\n * @returns JSON object representing the tree\n */\nexport const treeStringToJson = (text: string) => {\n  const elements = new Set();\n  let prevLine = \"\";\n  const path: string[] = [];\n\n  const tabChar = getTabChar(text);\n  if (!tabChar) {\n    console.error(\"Unable to parse tab character\");\n    return {};\n  }\n\n  // replace whatever tabChar is used with \\t in memory to make parsing easier\n  const treeFormatted = text.replace(new RegExp(tabChar, \"g\"), \"\\t\");\n\n  // look for line breaks that works on all platforms\n  treeFormatted.split(EOL_MATCH).forEach((line, index) => {\n    const isTreeFormat = line.match(/^(\\t+)?(│|├──|└──|\\t)+ .+/);\n    if (!isTreeFormat) return {};\n    const prevPrefix = prevLine.split(\" \")[0];\n    const prevNumTabs = getNumberOfTabs(prevPrefix);\n    const prefix = line.split(\" \")[0];\n    const numTabs = getNumberOfTabs(prefix);\n    const filename: string = line.substr(prefix.length).trim();\n    // Pop a certain number of elements from path\n    const popCount = numTabs <= prevNumTabs ? prevNumTabs - numTabs + 1 : 0;\n    Array(popCount)\n      .fill(\"pop\")\n      .forEach(() => path.pop());\n\n    /* \n      EXAMPLE OF REDUCER FUNCTION\n        For each element in path, return elements[pathItem]\n        The result is the branch in elements for the current path\n        path = [ \"src/\", \"Home/\"]\n        elements = { \n          \"src/\": { \n            \"Home/\": {} \n          }\n        }\n        iter1 = elements[\"src/\"]\n        iter2 = elements[\"src/\"][\"Home/\"]\n        curr = {}\n    */\n    const current: TreeType = path.reduce((branch: TreeType, filename: string) => branch[filename], elements);\n    current[filename] = { [INDEX_NAME]: index };\n    prevLine = line;\n    path.push(filename);\n  });\n  return elements;\n};\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from \"vscode\";\nimport * as path from \"path\";\n\nimport { provideFoldingRanges } from \"./providers/foldingRangeProvider\";\nimport { provideDocumentFormattingEdits } from \"./providers/formattingEditProvider\";\nimport { provideCompletionItems } from \"./providers/completionItemsProvider\";\nimport { textDocumentChangeProvider } from \"./providers/textDocumentChangeProvider\";\n\nconst { VSCODE_DEBUG = false } = process.env;\n\n// when the extension is activated\nexport async function activate(context: vscode.ExtensionContext) {\n  context.subscriptions.push(\n    vscode.languages.registerFoldingRangeProvider({ language: \"tree\" }, { provideFoldingRanges })\n  );\n\n  context.subscriptions.push(\n    vscode.languages.registerDocumentFormattingEditProvider({ language: \"tree\" }, { provideDocumentFormattingEdits })\n  );\n\n  context.subscriptions.push(\n    vscode.languages.registerCompletionItemProvider({ language: \"tree\" }, { provideCompletionItems }, \"|\")\n  );\n\n  vscode.workspace.onDidChangeTextDocument(textDocumentChangeProvider);\n\n  // Open example.tree in a new window when running locally for debugging\n  if (VSCODE_DEBUG) {\n    const fileUrl = path.join(context.extensionPath, \"src/__tests__/trees/tab-lf.tree\");\n    const document = await vscode.workspace.openTextDocument(fileUrl);\n    vscode.window.showTextDocument(document);\n  }\n}\n"],"names":["assertPath","path","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","i","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","posix","resolve","cwd","resolvedPath","resolvedAbsolute","arguments","undefined","process","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","dir","root","base","name","_format","parse","ret","delimiter","win32","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","umask","document","position","token","Promise","ranges","getRanges","branch","children","Object","values","startIndex","INDEX_NAME","endIndex","indexes","getIndexes","forEach","child","Math","max","getLastNode","vscode","FoldingRange","FoldingRangeKind","Region","tree","treeStringToJson","getText","TREE_CHARS","event","isUntitled","textDocument","text","some","v","includes","console","log","languages","setTextDocumentLanguage","uuid","replace","c","r","random","toString","EOL_MATCH","getNumberOfTabs","line","match","elements","Set","prevLine","tabChar","treeLines","split","childRegex","firstChild","find","getTabChar","RegExp","index","prevPrefix","prevNumTabs","prefix","numTabs","filename","substr","trim","fill","pop","current","reduce","error","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","VSCODE_DEBUG","async","context","subscriptions","registerFoldingRangeProvider","language","provideFoldingRanges","registerDocumentFormattingEditProvider","provideDocumentFormattingEdits","registerCompletionItemProvider","provideCompletionItems","workspace","onDidChangeTextDocument","textDocumentChangeProvider","fileUrl","extensionPath","openTextDocument","window","showTextDocument"],"sourceRoot":""}